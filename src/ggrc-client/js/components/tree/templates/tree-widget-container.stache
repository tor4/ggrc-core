{{!
    Copyright (C) 2019 Google Inc.
    Licensed under http://www.apache.org/licenses/LICENSE-2.0 <see LICENSE file>
}}

<div class="flex-box flex-col {{cssClasses}}">
  <div class="flex-box flex-col header tree-header-content">
    <div class="flex-box tree-filter">
      <tree-filter-input class="flex-size-1"
                         registerFilter:from="@registerFilter"
                         on:submit="onFilter()"
                         on:openAdvanced="openAdvancedFilter()"
                         on:removeAdvanced="removeAdvancedFilters()"
                         showAdvanced:from="statusFilterVisible"
                         disabled:from="advancedSearch.filter"
                         depth:from="options.depth"
                         filterDeepLimit:from="options.filterDeepLimit"
      ></tree-filter-input>
      {{#if statusFilterVisible}}
        <tree-status-filter class="flex-size-1"
                            widgetId:from="options.widgetId"
                            modelName:from="modelName"
                            registerFilter:from="@registerFilter"
                            on:filter="onFilter"
                            disabled:from="advancedSearch.filter">
          <multiselect-dropdown options:from="filterStates"
                                placeholder:from="'Filter by State'"
                                disabled:from="advancedSearch.filter"
                                on:dropdownClose="selectItems(%event)">
          </multiselect-dropdown>
          {{#if statusTooltipVisible}}
            <i class="fa fa-question-circle" rel="tooltip"
               title="The state represents the state of this object information within GGRC. It does not indicate the state of the underlying product or system."></i>
          {{/if}}
        </tree-status-filter>
      {{/if}}
      {{^if noResults}}
        <tree-pagination paging:from="pageInfo"></tree-pagination>
      {{/if}}
    </div>

    <tree-actions parentInstance:from="parent_instance"
                  options:from="options"
                  model:from="model"
                  showedItems:from="showedItems"
                  on:export="export()">
    </tree-actions>

    <simple-modal state:from="advancedSearch"
                  modalTitle:from="'{{model.title_singular}} Advanced Search'"
                  extraCssClass:from="'advanced-search'">
      <div class="advanced-search__content">
        <div class="simple-modal__body">
          <advanced-search-filter-container items:bind="advancedSearch.filterItems"
                                            availableAttributes:from="columns.available"
                                            modelName:from="modelName"
                                            on:el:enter="applyAdvancedFilters()">
          </advanced-search-filter-container>
        </div>
        <div class="advanced-search__mapping-header">
          <h4>Filter by Mapping</h4>
        </div>
        <div class="simple-modal__body">
          <advanced-search-mapping-container items:bind="advancedSearch.mappingItems"
                                             modelName:from="modelName"
                                             on:el:enter="applyAdvancedFilters()">
          </advanced-search-mapping-container>
        </div>
      </div>
      <div class="simple-modal__footer">
        <div class="advanced-search__controls">
          <button type="reset" class="btn btn-white" on:el:click="resetAdvancedFilters()">Reset to Defaults</button>
          <button type="submit" class="btn btn-lightBlue" on:el:click="applyAdvancedFilters()">Apply</button>
        </div>
      </div>
    </simple-modal>

    <tree-header selectedColumns:from="columns.selected"
                 availableColumns:from="columns.available"
                 mandatory:from="columns.mandatory"
                 disableConfiguration:from="columns.disableConfiguration"
                 sortingInfo:from="sortingInfo"
                 model:from="model"
                 on:sort="onSort(%event)"
                 on:updateColumns="onUpdateColumns(%event)">
    </tree-header>

  </div>

  <tree-view items:from="showedItems"
             limitDepthTree:from="limitDepthTree"
             selectedColumns:from="columns.selected"
             mandatory:from="columns.mandatory"
             disableConfiguration:from="columns.disableConfiguration"
             loading:from="loading"
             parentInstance:from="parent_instance"
             model:from="model"
             getDepthFilter:from="@getDepthFilter">
  </tree-view>

  <div class="tree-footer flex-box">
    {{^if noResults}}
      <tree-pagination paging:from="pageInfo" placement:from="'top'"></tree-pagination>
    {{/if}}
  </div>
</div>
